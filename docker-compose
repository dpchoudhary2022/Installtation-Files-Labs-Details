###############.......................docker compose...............................######################
###############.......................docker compose...............................######################

# Docker Compose is used to run multiple containers as a single service. For example, suppose you had an application which required NGNIX and MySQL, you could create one file which would start both the containers as a service without the need to start each one separately.

##########........ Benefits of Docker Compose.................###########
##########........ Benefits of Docker Compose.................###########

1-Single host deployment - This means you can run everything on a single piece of hardware
2-Quick and easy configuration - Due to YAML scripts
3-High productivity - Docker Compose reduces the time it takes to perform tasks
4-Security - All the containers are isolated from each other, reducing the threat landscape

--------------------------------------------------------------------------------------------------------------------------------

$ docker-compose --version // current version 1.29.2

--------------------------------------------------
$ vi docker-compose.yml

# here The database_server and web_server  keyword are used to define two separate services. One will be running our mysql database and the other will be our nginx web server.
----------------------------------------------

version: '3'
services:
  database_server:
    image: mysql
    ports:
      - "3306:3306"                                        
    environment:
    - MYSQL_ROOT_PASSWORD=password
    - MYSQL_USER=user
    - MYSQL_PASSWORD= password
    - MYSQL_DATABASE=daemondb

  webserver:
    image: nginx


-----------------------------------------------------------------    
# create and start the service 
$ docker-compose up -d
$ docker ps 

# stop and remove services
$ docker-compose down 

# if we want to change the name of docker-compose.yml file the format is as below to follow:
# 
# first change name of docker-compose.yml to demo.yml
$ mv docker-compose.yml demo.yml

# now start and run services
# -f : is file name
$ docker-compose -f demo.yml up -d 

$ docker-ps 

# stop the services
$ docker-compose -f demo.yml down

----------------------------------------------------------------

###############............ scaleup and scale down the services in docker compose...................#####################
###############.............scaleup and scale down the services in docker compose...................#####################


vi docker-compose.yml 
---------------------------------------------------------

          version : "3"
          services:
             webserver:
              image: "nginx:latest"
              ports:
                  - "80-85:80"
                  
                  
----------------------------------------------------------------

# scaleup the service also start and run the services
# docker-compose scale <service name> = <no of instances>  // syntex
# we cand start/run services then scaleup or both can done together as in below showing

$ docker-compose up -d --scale webserver=3   // start + run + scaleup all together
$ docker ps

# to see log details 
$ docker compose logs

-------------------------------------------------------
# or this way 
$ docker-compose up -d
$ docker-compose scale webserver=3

------------------------------------------------------

####################################################################################















         
